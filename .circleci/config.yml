# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  build-ebs-mac:
    parameters:
      xcode_version:
        default: "13.3.0"
        type: string
    macos:
      xcode: <<parameters.xcode_version>>
    environment:
      EBS_VERSION: 3.0.0
      NDI_PLUGIN_RELEASE_TAG: 4.9.1

      EBS_DEPS_PATH: /tmp/obs-deps
      EBS_DEPS_QT_PATH: /tmp/obs-deps-qt
      EBS_LIBWEBRTC_PATH: /tmp/libwebrtc/cmake
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run:
          name: install deps
          command: |
            brew install cmake
            
            brew install libxcb
            brew install libxau
            brew install libxdmcp
            
            mkdir -p /tmp
            curl -L https://github.com/obsproject/obs-deps/releases/download/2022-01-31/macos-deps-2022-01-31-universal.tar.xz -o /tmp/obs-deps.tar.xz
            curl -L https://github.com/obsproject/obs-deps/releases/download/2022-01-31/macos-deps-qt-2022-01-31-universal.tar.xz -o /tmp/obs-deps-qt.tar.xz
            
            mkdir -p $EBS_DEPS_PATH
            mkdir -p $EBS_DEPS_QT_PATH
            tar -xzf /tmp/obs-deps.tar.xz -C $EBS_DEPS_PATH
            tar -xzf /tmp/obs-deps-qt.tar.xz -C $EBS_DEPS_QT_PATH
          working_directory: deps-install

      - run:
          name: get ndi runtime
          working_directory: /tmp
          command: |
            destFile="ndi-runtime.pkg"
            fileid="1ah95-16da1LBqEeHSHki1nOZseHwm3jx"
            
            while true ; do
              curl -c ./cookie -s -L "https://drive.google.com/uc?export=download&id=${fileid}"
              cookie=`cat cookie | grep google`
              if [ "$cookie" != "" ]; then
                break
              fi
              echo "waiting cookie..."
              sleep 1
            done
            
            curl -Lb ./cookie "https://drive.google.com/uc?export=download&confirm=`awk '/download/ {print $NF}' ./cookie`&id=${fileid}" -o ${destFile}
            ls

      - run:
          name: get ndi runtime m1
          working_directory: /tmp
          command: |
            destFile="ndi-runtime-m1.pkg"
            fileid="11ZTydsR4lH9uUZMVjo7wlJA_ezfwQOzX"

            while true ; do
              curl -c ./cookie -s -L "https://drive.google.com/uc?export=download&id=${fileid}"
              cookie=`cat cookie | grep google`
              if [ "$cookie" != "" ]; then
                break
              fi
              echo "waiting cookie..."
              sleep 1
            done
            
            curl -Lb ./cookie "https://drive.google.com/uc?export=download&confirm=`awk '/download/ {print $NF}' ./cookie`&id=${fileid}" -o ${destFile}
            ls

      - run:
          name: get libwebrtc
          working_directory: /tmp
          command: |
            destFile="/tmp/libwebrtc"
            fileid="1rBo-FxE90uJx0f2N6eDvPIofd0YLCDn0"
            filename="libwebrtc.zip"

            while true ; do
              curl -c ./cookie -s -L "https://drive.google.com/uc?export=download&id=${fileid}"
              cookie=`cat cookie | grep google`
              if [ "$cookie" != "" ]; then
                break
              fi
              echo "waiting cookie..."
              sleep 1
            done
  
            curl -v -Lb ./cookie "https://drive.google.com/uc?export=download&confirm=`awk '/download/ {print $NF}' ./cookie`&id=${fileid}" -o ${filename}
            ls
            unzip -o ${filename} -d ${destFile}
            ls

      - run:
          name: build_EBS
          working_directory: .
          command: |
            ./CI/before-script-osx.sh
            cd build
            cmake --build . --config RELEASE

      - run:
          name: check built libs
          command: |
            ls ~/project/build/UI/obs-frontend-api/
            ls ~/project/build/libobs/
            ls /tmp/

      - run:
          name: build_NDI_PLUGIN
          working_directory: /tmp
          command: |
            MY_DIR=`eval echo ~$USER`
            echo $MY_DIR
            git clone -b $NDI_PLUGIN_RELEASE_TAG https://github.com/Palakis/obs-ndi.git
            cd obs-ndi
            mkdir build
            cd build
            cmake \
                -DLIBOBS_INCLUDE_DIR=$MY_DIR/project/libobs \
                -DLIBOBS_LIB=$MY_DIR/project/build/libobs/libobs.0.dylib \
                -DOBS_FRONTEND_LIB=$MY_DIR/project/build/UI/obs-frontend-api/libobs-frontend-api.dylib \
                -DQt5Core_DIR=$EBS_DEPS_QT_PATH/lib/cmake/Qt5Core \
                -DQt5Widgets_DIR=$EBS_DEPS_QT_PATH/lib/cmake/Qt5Widgets \
                -DQTDIR=$EBS_DEPS_QT_PATH \
                ../
            
            make

      - run:
          name: pack .app
          environment:
            NDI_PATH: /tmp/obs-ndi
            NDI_RUNTIME: /tmp/ndi-runtime.pkg
            NDI_M1_RUNTIME: /tmp/ndi-runtime-m1.pkg
          command: |
            sudo -E ./CI/before-deploy-osx.sh
            cd build/
            sudo -E sh ../CI/install/osx/app2dmg.sh
            mkdir -p artifacts
            cp ./EBS_"$EBS_VERSION"_Install.dmg ./artifacts/EBS_"$EBS_VERSION"_Install.dmg
            cd artifacts/
            ls

      - store_artifacts:
          path: build/artifacts
            

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-ebs-mac-workflow:
    jobs:
      - build-ebs-mac:
          matrix:
            parameters:
              xcode_version:
                - 13.3.0
                - 13.2.1
