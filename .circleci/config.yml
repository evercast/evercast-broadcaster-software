# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  say-hello:
    macos:
      xcode: 13.2.1
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run:
          name: install deps
          command: |
            brew install cmake
            pip3 install dmgbuild
            
            mkdir -p /tmp
            curl -L https://github.com/obsproject/obs-deps/releases/download/2022-01-31/macos-deps-2022-01-31-universal.tar.xz -o /tmp/obs-deps.tar.xz
            curl -L https://github.com/obsproject/obs-deps/releases/download/2022-01-31/macos-deps-qt-2022-01-31-universal.tar.xz -o /tmp/obs-deps-qt.tar.xz
            
            mkdir -p /tmp/obs-deps
            mkdir -p /tmp/obs-deps-qt
            tar -xzf /tmp/obs-deps.tar.xz -C /tmp/obs-deps
            tar -xzf /tmp/obs-deps-qt.tar.xz -C /tmp/obs-deps-qt
          working_directory: deps-install

      - run:
          name: get libwebrtc
          command: |
            destFile="/tmp/libwebrtc"
            fileid="17Q99bZSNaScqqWzSCfazcixgYReA3428"
            filename="libwebrtc.zip"

            curl -c ./cookie -s -L "https://drive.google.com/uc?export=download&id=${fileid}" > /dev/null
            curl -Lb ./cookie "https://drive.google.com/uc?export=download&confirm=`awk '/download/ {print $NF}' ./cookie`&id=${fileid}" -o ${filename}
            unzip -o ${filename} -d ${destFile}
          working_directory: deps-install

      - run:
          name: build_EBS
          working_directory: .
          environment:
            EBS_DEPS_PATH: /tmp/obs-deps
            EBS_DEPS_QT_PATH: /tmp/obs-deps-qt
            EBS_LIBWEBRTC_PATH: /tmp/libwebrtc/cmake
            EBS_VERSION: 3.0.0

          command: |
            ./CI/before-script-osx.sh
            cd build
            cmake --build . --config RELEASE

      - run:
          name: check built libs
          command: |
            ls ~/project/build/UI/obs-frontend-api/
            ls ~/project/build/libobs/
            echo $TEST_KEY

      - run:
          name: build_NDI_PLUGIN
          working_directory: deps-install
          environment:
            EBS_DEPS_QT_PATH: /tmp/obs-deps-qt

          command: |
            MY_DIR=`eval echo ~$USER`
            echo $MY_DIR
            git clone -b 4.9.1 https://github.com/Palakis/obs-ndi.git
            cd obs-ndi
            mkdir build
            cd build
            cmake \
                -DLIBOBS_INCLUDE_DIR=$MY_DIR/project/libobs \
                -DLIBOBS_LIB=$MY_DIR/project/build/libobs/libobs.0.dylib \
                -DOBS_FRONTEND_LIB=$MY_DIR/project/build/UI/obs-frontend-api/libobs-frontend-api.dylib \
                -DQt5Core_DIR=$EBS_DEPS_QT_PATH/lib/cmake/Qt5Core \
                -DQt5Widgets_DIR=$EBS_DEPS_QT_PATH/lib/cmake/Qt5Widgets \
                -DQTDIR=$EBS_DEPS_QT_PATH \
                ../
            
            make

      - run:
          name: pack .app
          working_directory: .
          environment:
            NDI_PATH: ~/project/deps-install/obs-ndi
            NDI_RUNTIME:
            NDI_M1_RUNTIME:
          command: |
            sudo -E ./CI/before-deploy-osx.sh
            cd build/
            sudo -E sh ../CI/install/osx/app2dmg.sh
            
            


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
